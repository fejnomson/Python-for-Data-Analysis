from pandas import DataFrame, Series
import pandas as pd

frame = DataFrame(records)
frame['tz'][:10]
tz_counts = frame['tz'].value_counts()
tz_counts[:10]

clean_tz = frame['tz'].fillna('Missing')
clean_tz[clean_tz == ''] = 'Unknown'
tz_counts = clean_tz.value_counts()
tz_counts[:10]
%matplotlib
tz_counts[:10].plot(kind = 'barh', rot = 0)

frame['a'][1]
frame['a'][50]
frame['a'][51]
results = Series([x.split()[0] for x in frame.a.dropna()])
cframe = frame[frame.a.notnull()]
operating_system = np.where(
	# same as ifelse??
	cframe['a'].str.contains('Windows'),
	'Windows',
	'Not Windows'
)
operating_system[:5]
by_tz_os = cframe.groupby(['tz', operating_system])
agg_counts = by_tz_os.size().unstack().fillna(0)
agg_counts[:10]
# size() similar to n()
# unstack() similar to tidyr:
#		data.frame(
#			c(dimension a, dimension b),
#			c(value a, value b)
#		)
#		=>
#		data.frame(
#			dimension a = value a,
#			dimension b = value b
#		)

indexer = agg_counts.sum(1).argsort()
# I think argsort is similar to order():
#		x = Series([3, 2, 1])
#		x.argsort()
#		x[x.argsort()]
indexer[:10]
count_subset = agg_counts.take(indexer)[-10:]
# I think take() is just integer subsetting?
#		mtcars = pd.read_csv('mtcars.csv')[:5]
#		mtcars.take(Series([4, 3, 2, 1, 0]))
#		mtcars.iloc[Series([4, 3, 2, 1, 0]), :]
count_subset.plot(kind = 'barh', stacked = True)
normed_subset = count_subset.div(
	# Divide by row sum to get percent
	count_subset.sum(1), axis = 0
)
normed_subset.plot(kind = 'barh', stacked = True)
